version: '3.8'

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq
    env_file:
      - .env
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./proxy_params:/etc/nginx/proxy_params
      - ./dhparam.pem:/etc/nginx/dhparam.pem
      - ./localhost.crt:/etc/nginx/localhost.crt
      - ./localhost.key:/etc/nginx/localhost.key
      - ./wait-for-graphql.sh:/wait-for-graphql.sh

    ports:
      - "443:443"
    depends_on:
      - frontend
    networks:
      - app-network
    entrypoint: ./wait-for-graphql.sh nginx -g 'daemon off;'

  postgres:
    image: postgres:alpine
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

  mongo:
    image: mongo:latest
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    ports:
      - "27017:27017"

  redis:
    image: redis:alpine
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network: {}

volumes:
  postgres_data: {}
  mongo_data: {}
