worker_processes auto; # Optimizes for the number of CPU cores.

events {
    worker_connections 1024; # Max number of connections per worker.
}

http {
    sendfile on; # Enable high-performance file transfer mode.
    tcp_nopush on; # Send HTTP response headers in one packet.
    tcp_nodelay on; # Disable Nagle's algorithm for better response time.

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log  /var/log/nginx/error.log;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3; # Only use modern, secure protocols.
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem; # Ensure you have generated this Diffie-Hellman parameter.
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_ecdh_curve secp384r1; # Use a strong curve.
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # HSTS (HTTP Strict Transport Security)
    # This header enforces secure (HTTPS) connections to the server
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    upstream frontend {
        server frontend:3000; # Define upstream server for frontend.
    }

    upstream backend {
        server backend:3001; # Define upstream server for backend (API).
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost; # Match localhost
        return 301 https://$host$request_uri; # Redirect all HTTP requests to HTTPS
    }

    # HTTPS Server
    server {
        listen 443 ssl;
		http2 on; # Enable HTTP/2 over TLS
        server_name localhost;

        ssl_certificate /etc/nginx/localhost.crt; # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/localhost.key; # Path to your SSL certificate key

        # Default location block for frontend requests.
        location / {
            proxy_pass http://frontend;
            include /etc/nginx/proxy_params; # Include common proxy settings.
        }

        # Location block for GraphQL API requests.
        location /graphql {
            proxy_pass http://backend/graphql;
            include /etc/nginx/proxy_params; # Include common proxy settings.
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Content Security Policy
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    }
}
